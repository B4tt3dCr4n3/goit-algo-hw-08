"""Уявіть, що вам на технічному інтерв'ю дають наступну задачу, яку треба 
розв'язати за допомогою купи.

Є декілька мережевих кабелів різної довжини, їх потрібно об'єднати по два 
за раз в один кабель, використовуючи з'єднувачі, у порядку, який призведе 
до найменших витрат. Витрати на з'єднання двох кабелів дорівнюють їхній 
сумі довжин, а загальні витрати дорівнюють сумі з'єднання всіх кабелів.
Завдання полягає в тому, щоб знайти порядок об'єднання, який мінімізує 
загальні витрати."""

import heapq

def min_cost_to_connect_cables(cables):
    # Створюємо мін-купу з довжин кабелів
    heapq.heapify(cables)
    total_cost = 0
    step = 1
    
    while len(cables) > 1:
        # Дістаємо два найменші кабелі
        first = heapq.heappop(cables)
        second = heapq.heappop(cables)
        
        # Об'єднуємо їх та додаємо в купу
        cost = first + second
        total_cost += cost
        heapq.heappush(cables, cost)
        
        # Виведення інформації на кожному кроці
        print(f"Крок {step}:")
        print(f"  Перший кабель: {first}")
        print(f"  Другий кабель: {second}")
        print(f"  Вартість об'єднання: {cost}")
        print(f"  Загальна вартість на даному етапі: {total_cost}")
        print(f"  Поточна купа: {cables}\n")
        
        step += 1
    
    return total_cost

# Тестування
cables = [3, 1, 9, 7, 2, 10, 5]
print("Довжини кабелів:", cables)
min_cost = min_cost_to_connect_cables(cables)
print("Мінімальна вартість з'єднання кабелів:", min_cost)
